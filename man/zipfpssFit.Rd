% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/zipfpssFit.R
\name{zipfpssFit}
\alias{zipfpssFit}
\alias{residuals.zpssR}
\alias{fitted.zpssR}
\alias{coef.zpssR}
\alias{plot.zpssR}
\alias{print.zpssR}
\alias{summary.zpssR}
\alias{logLik.zpssR}
\alias{AIC.zpssR}
\alias{BIC.zpssR}
\title{Zipf-PSS parameters estimation.}
\usage{
zipfpssFit(data, init_alpha, init_lambda, level = 0.95, isTruncated = FALSE,
  ...)

\method{residuals}{zpssR}(object, ...)

\method{fitted}{zpssR}(object, ...)

\method{coef}{zpssR}(object, ...)

\method{plot}{zpssR}(x, ...)

\method{print}{zpssR}(x, ...)

\method{summary}{zpssR}(object, ...)

\method{logLik}{zpssR}(object, ...)

\method{AIC}{zpssR}(object, ...)

\method{BIC}{zpssR}(object, ...)
}
\arguments{
\item{data}{Matrix of count data in form of table of frequencies.}

\item{init_alpha}{Initial value of \eqn{\alpha} parameter (\eqn{\alpha > 1}).}

\item{init_lambda}{Initial value of \eqn{\lambda} parameter (\eqn{\lambda \geq 0}).}

\item{level}{Confidence level used to calculate the confidence intervals (default 0.95).}

\item{isTruncated}{Logical; if TRUE, the truncated version of the distribution is returned.(default = FALSE)}

\item{...}{Further arguments to the generic functions. The extra arguments are passing
to the \emph{\link{optim}} function.}

\item{object}{An object from class "zpssR" (output of \emph{zipfpssFit} function).}

\item{x}{An object from class "zpssR" (output of \emph{zipfpssFit} function).}
}
\value{
Returns a \emph{zpssR} object composed by the maximum likelihood parameter estimations,
their standard deviation, their confidence intervals and the value of the log-likelihood at the
maximum likelihood estimator.
}
\description{
For a given sample of strictly positive integer numbers,  usually of the type of ranking data or
frequencies of frequencies data, estimates the parameters of a Zipf-PSS distribution by means of
the maximum likelihood method.
}
\details{
The argument \code{data} is a two column matrix such that the first column of each row contains a
count, while the corresponding second column contains its frequency.

The log-likelihood function is equalt to:
\deqn{l(\alpha, \lambda, x) = \sum_{i =1} ^{m} f_a(x_i)\, log(P(Y = x_i))},
where \eqn{m} is the number of different values in the sample, being \eqn{f_{a}(x_i)} is the absolute
frequency of \eqn{x_i}.The probabilities are calculated applying the Panjer recursion.

The function \emph{\link{optim}} is used to estimate the parameters.
}
\examples{
data <- rzipfpss(100, 2.5, 1.3)
data <- zipfExtR_getDataMatrix(data)
obj <- zipfpssFit(data, 1.001, 0.001)
}
\references{
{
Bjørn Sundt and William S Jewell. 1981. Further results on recursive evaluation of compound distributions. ASTIN
Bulletin: The Journal of the IAA 12, 1 (1981), 27–39.

Harry H Panjer. 1981. Recursive evaluation of a family of compound distributions. Astin Bulletin 12, 01 (1981), 22–26.
}
}
\seealso{
\code{\link{zipfExtR_getDataMatrix}}, \code{\link{moezipf_getInitialValues}}.
}
