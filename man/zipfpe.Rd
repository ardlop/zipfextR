% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/zipfpe.R
\name{zipfpe}
\alias{zipfpe}
\alias{dzipfpe}
\alias{dzipfpe}
\alias{pzipfpe}
\alias{qzipfpe}
\alias{rzipfpe}
\title{The Zipf-Poisson Extreme Distribution (Zipf-PE).}
\usage{
dzipfpe(x, alpha, beta, log = FALSE)

pzipfpe(q, alpha, beta, log.p = FALSE, lower.tail = TRUE)

qzipfpe(p, alpha, beta, log.p = FALSE, lower.tail = TRUE)

rzipfpe(n, alpha, beta)
}
\arguments{
\item{x, q}{Vector of positive integer values.}

\item{alpha}{Value of the \eqn{\alpha} parameter (\eqn{\alpha > 1} ).}

\item{beta}{Value of the \eqn{\beta} parameter (\eqn{\beta > 0} ).}

\item{log, log.p}{Logical; if TRUE, probabilities p are given as log(p).}

\item{lower.tail}{Logical; if TRUE (default), probabilities are \eqn{P[X \leq x]}, otherwise, \eqn{P[X > x]}.}

\item{p}{Vector of probabilities.}

\item{n}{Number of random values to return.}
}
\value{
{
\code{dzipfpe} gives the probability mass function,
\code{pzipfpe} gives the cumulative function,
\code{qzipfpe} gives the quantile function, and
\code{rzipfpe} generates random values from a Zipf-PE distribution.  }
}
\description{
Probability Mass function, Cumulative function, Quantile function and Random Number Generation
for the Zipf-PE distribution with parameters \eqn{\alpha} and \eqn{\beta}.
}
\details{
The \emph{probability mass function} of the Zipf-PE distribution at a positive integer
value \eqn{x} with parameters \eqn{\alpha} and \eqn{\beta} is computed as follows:

\deqn{p(x | \alpha, \beta) = \frac{e^{\beta (1 - \frac{\zeta(\alpha, x)}{\zeta(\alpha)})} (e^{\beta \frac{x^{-\alpha}}{\zeta(\alpha)}} - 1)}
{e^{\beta} - 1},\, x= 1,2,...,\, \alpha > 1,\, -\infty < \beta < +\infty,}

where \eqn{\zeta(\alpha)} is the Riemann-zeta function at \eqn{\alpha}, and \eqn{\zeta(\alpha, x)}
is the Hurtwitz zeta function with arguments \eqn{\alpha} and x.

The \emph{cumulative distribution function}, \eqn{F(x)}, at a given positive integer value \eqn{x},
 is calcuted as:
\deqn{F(x) = \frac{e^{\beta (1 - \frac{\zeta(\alpha, x + 1)}{\zeta(\alpha)})} - 1}{e^{\beta} -1}}

The \emph{quantiles} of a Zipf-PE distribution for a given probability
vector \code{p}, are equal to the quantiles of a Zipf distribution with the same parameter
\eqn{\alpha}, and probability vector equal to:

\deqn{p\prime = \frac{log(p\, (e^{\beta} - 1) + 1)}{\beta}}

The random generator function applies the Inversion Method to obtain the random numbers. The function
generates \emph{n} values from the interval (0, 1) using an Uniform distribution and it transforms these
values by applying (1). Finally, the \emph{quantile} function and the \eqn{p\prime} are used to obtain the random values.
}
\examples{
dzipfpe(1:10, 2.5, -1.5)
pzipfpe(1:10, 2.5, -1.5)
qzipfpe(0.56, 2.5, 1.3)
rzipfpe(10, 2.5, 1.3)

}
\references{
{
Young, D. S. (2010). \emph{Tolerance: an R package for estimating tolerance intervals}. Journal of Statistical Software, 36(5), 1-39.
}
}
