% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/moezipf.R
\name{moezipf}
\alias{moezipf}
\alias{dmoezipf}
\alias{dmoezipf}
\alias{pmoezipf}
\alias{qmoezipf}
\alias{rmoezipf}
\title{The Marshal-Olkin Extended Zipf Distribution (MOEZipf).}
\usage{
dmoezipf(x, alpha, beta, log = FALSE)

pmoezipf(q, alpha, beta, log.p = FALSE, lower.tail = TRUE)

qmoezipf(p, alpha, beta, log.p = FALSE, lower.tail = TRUE)

rmoezipf(n, alpha, beta)
}
\arguments{
\item{x, q}{Vector of positive integer values.}

\item{alpha}{Value of the \eqn{\alpha} parameter (\eqn{\alpha > 1} ).}

\item{beta}{Value of the \eqn{\beta} parameter (\eqn{\beta > 0} ).}

\item{log, log.p}{Logical; if TRUE, probabilities p are given as log(p).}

\item{lower.tail}{Logical; if TRUE (default), probabilities are \eqn{P[X \leq x]}, otherwise, \eqn{P[X > x]}.}

\item{p}{Vector of probabilities.}

\item{n}{Number of random values to return.}
}
\value{
{
\code{dmoezipf} gives the probability mass function,
\code{pmoezipf} gives the cumulative function,
\code{qmoezipf} gives the quantile function, and
\code{rmoezipf} generates random deviates.}
}
\description{
Probability Mass Function, Cumulative Function, Quantile Function and Random
Generation for the MOEZipf distribution with parameters \eqn{\alpha} and \eqn{\beta}.
}
\details{
The \emph{probability mass function} at a positive integer value \eqn{x} of the MOEZipf distribution with
parameters \eqn{\alpha} and \eqn{\beta} is computed as follows:

\deqn{p(x | \alpha, \beta) = \frac{x^{-\alpha} \beta \zeta(\alpha) }{[\zeta(\alpha) - \bar{\beta} \zeta (\alpha, x)] [\zeta (\alpha) - \bar{\beta} \zeta (\alpha, x + 1)]}, \alpha > 1, \beta > 0, }

where \eqn{\zeta(\alpha)} is the Riemann-zeta function at \eqn{\alpha}, \eqn{\zeta(\alpha, x)}
is the Hurtwitz zeta function with arguments \eqn{\alpha} and x, and \eqn{\bar{\beta} = 1 - \beta}.

The \emph{cumulative distribution function}, \eqn{F_{\alpha}(x)}, at a given positive integer value \eqn{x},
 is calcuted from the survival function \eqn{S(x)} as:
\deqn{F(x) = 1 - S(x), }
the survival function \eqn{S(x)} is equal to:
\deqn{S(x) = \frac{\beta \zeta(\alpha, x + 1)}{\zeta(\alpha) - \bar{\beta}\zeta(\alpha, x + 1)}, \forall x > 0}

The \emph{quantiles} of a MOEZipf distribution for a given probability
vector \code{p}, are obtained by computing the quantiles associated to a Zipf distribution with
the same parameter \eqn{\alpha}, and probability vector equal to:
\deqn{p\prime = \frac{p\,\beta}{1 + p\,(\beta - 1)}}
}
\examples{
dmoezipf(1:10, 2.5, 1.3)
pmoezipf(1:10, 2.5, 1.3)
qmoezipf(0.56, 2.5, 1.3)
rmoezipf(10, 2.5, 1.3)

}
\references{
{
Young, D. S. (2010). \emph{Tolerance: an R package for estimating tolerance intervals}. Journal of Statistical Software, 36(5), 1-39.

Casellas, A. (2013) \emph{La distribució Zipf Estesa segons la transformació Marshall-Olkin}. Universitat Politécnica de Catalunya.

Pérez-Casany, M. and Casellas, A. (2013) \emph{Marshall-Olkin Extended Zipf Distribution}. arXiv preprint arXiv:1304.4540.

Duarte-López, A., Prat-Pérez, A., & Pérez-Casany, M. (2015, August). \emph{Using the Marshall-Olkin Extended Zipf Distribution in Graph Generation}. In European Conference on Parallel Processing (pp. 493-502). Springer International Publishing.
}
}
